/**
 * Created by WheelerLee.
 * <%= folderName %>/<%= modelName %>Controller
 * Copyright 2018 https://github.com/WheelerLee
 */

module.exports = {

  index: async function (req, res) {
    if (req.method.toLowerCase() === 'get') {
      var modify_permission = await PermissionService.valid(req.session.admin.id, '/<%= folderName %>/<%= modelName %>/modify');
      var delete_permission = await PermissionService.valid(req.session.admin.id, '/<%= folderName %>/<%= modelName %>/delete');
      return res.view({layout: '<%= folderName %>/layout', modify_permission: modify_permission, delete_permission: delete_permission});
    } else {
      try {
        var page = parseInt(req.param('page', 1));
        var limit = parseInt(req.param('limit', 10));
        var obj = {};
        <%_ for (var i in model['attributes']) { _%>
        <%_ var attribute = model['attributes'][i] _%>
        <%_ if (!attribute.type) {continue} _%>
        <%_ if (attribute.type.toLowerCase() === 'string') { _%>
        if (req.param('<%= i %>') && req.param('<%= i %>').trim() !== '') {
          obj['<%- i %>'] = {contains: req.param('<%- i %>').trim()};
        }
        <%_ } else { _%>
        if (req.param('<%- i %>') && req.param('<%- i %>').trim() !== '') {
          obj['<%- i %>'] = req.param('<%- i %>').trim();
        }
        <%_ } _%>
        <%_ } _%>

        let data = await <%= modelName %>.find({
          where: obj,
          limit: limit,
          skip: (page - 1) * limit,
          sort: 'sorted_num desc'
        });
        var count = await <%= modelName %>.count(obj);
        res.json({
          code: 0,
          msg: '',
          count: count,
          data: data
        });
      } catch (e) {
        res.json({
          code: 1,
          msg: '获取失败'
        });
      }
    }
  },

  modify: async function (req, res) {

    var <%- primaryKey %> = req.param('<%- primaryKey %>');
    if (req.method.toLowerCase() === 'get') {
      let <%- modelName.toLowerCase() %> = {};
      if (<%- primaryKey %>) {
        <%- modelName.toLowerCase() %> = await <%- modelName %>.findOne({<%- primaryKey %>: <%- primaryKey %>});
      }
      return res.view({layout: '<%- folderName %>/layout', <%- modelName.toLowerCase() %>: <%- modelName.toLowerCase() %>});
    } else {
      var obj = req.body || {};

      try {
        let result;
        if (<%- primaryKey %>) {
          result = await <%- modelName %>.update({<%- primaryKey %>: <%- primaryKey %>}, obj);
        } else {
          obj.create_user = req.session.admin.id;
          result = await <%- modelName %>.create(obj);
        }

        res.json({
          errCode: 0,
          msg: <%- primaryKey %> ? '修改成功' : '添加成功',
          data: result
        });
      } catch (e) {
        res.json({
          errCode: 1,
          msg: '服务异常，请重试'
        });
      }
    }

  },

  delete: async function (req, res) {
    try {
      var <%- primaryKey %> = req.param('<%- primaryKey %>');
      var result = await <%- modelName %>.update({<%- primaryKey %>: <%- primaryKey %>}, {deleted: 1});
      res.json({
        errCode: 0,
        msg: '删除成功',
        data: result
      });
    } catch (e) {
      res.json({
        errCode: 1,
        msg: '删除失败，请重试!'
      });
    }
  }

};
